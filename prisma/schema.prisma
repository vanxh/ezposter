generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["jsonProtocol"]
}

generator zod {
    provider = "zod-prisma"
    output   = "./zod" // (default) the directory where generated zod schemas will be saved

    relationModel = true // (default) Create and export both plain and related models.
    // relationModel         = "default" // Do not export model without relations.
    // relationModel         = false // Do not generate related model

    modelCase = "PascalCase" // (default) Output models using pascal case (ex. UserModel, PostModel)
    // modelCase             = "camelCase" // Output models using camel case (ex. userModel, postModel)

    modelSuffix = "Model" // (default) Suffix to apply to your prisma models when naming Zod schemas

    // useDecimalJs          = false // (default) represent the prisma Decimal type using as a JS number
    useDecimalJs = true // represent the prisma Decimal type using Decimal.js (as Prisma does)

    // imports = null // (default) will import the referenced file in generated schemas to be used via imports.someExportedVariable

    // https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
    prismaJsonNullability = true // (default) uses prisma's scheme for JSON field nullability
    // prismaJsonNullability = false // allows null assignment to optional JSON fields
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model User {
    id Int @id @default(autoincrement())

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    clerkId  String  @unique
    email    String?
    username String? @unique
    isAdmin  Boolean @default(false)

    premiumTier       PremiumTier @default(BASIC)
    premiumValidUntil DateTime?

    gameflipApiKey    String?
    gameflipApiSecret String?
    gameflipId        String?

    autoPost       Boolean @default(false)
    postTime       Int     @default(180) // in seconds
    purgeOlderThan Int     @default(1440) // in minutes

    nPosted Int @default(0)
    nPurged Int @default(0)

    customListingImage String?

    GameflipListing GameflipListing[]
    PremiumKey      PremiumKey[]
}

enum PremiumTier {
    BASIC
    PREMIUM
}

model GameflipListing {
    id Int @id @default(autoincrement())

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    kind               String @default("item")
    name               String
    description        String @db.LongText
    category           String @default("DIGITAL_INGAME")
    platform           String @default("unknown")
    upc                String @default("GFFORTNITE")
    priceInCents       Int
    accept_currency    String @default("USD")
    shippingWithinDays Int    @default(3)
    expiresWithinDays  Int    @default(30)
    tags               Json
    images             Json // string

    autoPost Boolean @default(true)

    user   User @relation(references: [id], fields: [userId])
    userId Int

    @@index([userId])
    @@index([userId, autoPost])
}

model PremiumKey {
    id Int @id @default(autoincrement())

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    key      String      @unique
    tier     PremiumTier
    duration Int         @default(30) // in days

    usedBy   User? @relation(fields: [usedById], references: [id])
    usedById Int?

    @@index([usedById])
}
